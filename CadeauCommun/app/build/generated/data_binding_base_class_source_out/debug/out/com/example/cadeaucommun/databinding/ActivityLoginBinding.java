// Generated by view binder compiler. Do not edit!
package com.example.cadeaucommun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cadeaucommun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button LoginButton;

  @NonNull
  public final Button button2;

  @NonNull
  public final Switch organizerSwitch;

  @NonNull
  public final EditText passLog;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final EditText userLog;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button LoginButton,
      @NonNull Button button2, @NonNull Switch organizerSwitch, @NonNull EditText passLog,
      @NonNull TextView textView10, @NonNull TextView textView5, @NonNull TextView textView9,
      @NonNull EditText userLog) {
    this.rootView = rootView;
    this.LoginButton = LoginButton;
    this.button2 = button2;
    this.organizerSwitch = organizerSwitch;
    this.passLog = passLog;
    this.textView10 = textView10;
    this.textView5 = textView5;
    this.textView9 = textView9;
    this.userLog = userLog;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LoginButton;
      Button LoginButton = ViewBindings.findChildViewById(rootView, id);
      if (LoginButton == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.organizerSwitch;
      Switch organizerSwitch = ViewBindings.findChildViewById(rootView, id);
      if (organizerSwitch == null) {
        break missingId;
      }

      id = R.id.passLog;
      EditText passLog = ViewBindings.findChildViewById(rootView, id);
      if (passLog == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.userLog;
      EditText userLog = ViewBindings.findChildViewById(rootView, id);
      if (userLog == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, LoginButton, button2,
          organizerSwitch, passLog, textView10, textView5, textView9, userLog);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
